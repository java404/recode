databaseChangeLog:
  - changeSet:
      id: init-schema-001-table-tasks
      author: xiong.jia_le
      changes:
        - sql:
            comment: Task Group
            splitStatements: false
            sql: CREATE TABLE task_group (
              task_group_id BIGINT(20) NOT NULL AUTO_INCREMENT,
              name VARCHAR(128),
              service VARCHAR(128),
              create_time datetime DEFAULT NULL,
              complete_time datetime DEFAULT NULL,
              status VARCHAR(128),
              task_error BOOLEAN,
              CONSTRAINT pk_task_group__task_group_id PRIMARY KEY (task_group_id));
        - sql:
            comment: Task Items
            splitStatements: false
            sql: CREATE TABLE task (
              task_id BIGINT(20) NOT NULL AUTO_INCREMENT,
              task_group_id BIGINT(20),
              create_time datetime DEFAULT NULL,
              complete_time datetime DEFAULT NULL,
              status VARCHAR(128),
              option MEDIUMTEXT COLLATE UTF8_BIN,
              details MEDIUMTEXT COLLATE UTF8_BIN,
              success BOOLEAN,
              error MEDIUMTEXT COLLATE UTF8_BIN,
              total_steps TINYINT NOT NULL DEFAULT 0,
              completed_steps TINYINT NOT NULL DEFAULT 0,
              CONSTRAINT pk_task__task_id PRIMARY KEY (task_id),
              CONSTRAINT fk_task__task_group_id FOREIGN KEY (`task_group_id`) REFERENCES `task_group` (`task_group_id`));
        - sql:
            comment: Task Step
            splitStatements: false
            sql: CREATE TABLE task_step (
              task_step_id BIGINT(20) NOT NULL AUTO_INCREMENT,
              task_id BIGINT(20),
              create_time datetime DEFAULT NULL,
              complete_time datetime DEFAULT NULL,
              strategy VARCHAR(128),
              detail MEDIUMTEXT COLLATE UTF8_BIN,
              step_log MEDIUMTEXT COLLATE UTF8_BIN,
              CONSTRAINT pk_task_step__task_step_id PRIMARY KEY (task_step_id),
              CONSTRAINT fk_task_ste__task_id FOREIGN KEY (`task_id`) REFERENCES `task` (`task_id`));
